###########################
# Deployment
###########################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-postgre-deploy
  labels:
    app: django-postgre
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-postgre
  template:
    metadata:
      labels:
        app: django-postgre
    spec:
      containers:
      - name: django-app
        image: app-djangoapp:latest
        imagePullPolicy: Never
        command: ["bash", "-e", "./django.sh"]
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
#        - name: POSTGRES_USER
#          valueFrom:
#            secretKeyRef:
#              name: postgres-credentials
#              key: POSTGRES_USER
#        - name: POSTGRES_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: postgres-credentials
#              key: POSTGRES_PASSWORD
#        - name: PG_DB
#          valueFrom:
#            configMapKeyRef:
#              name: app-variables
#              key: PG_DB
        - name: PG_HOST
          valueFrom:
            configMapKeyRef:
              name: app-variables
              key: PG_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-variables
              key: DB_PORT
    #     volumeMounts:
    #        - name: postgres-volume-mount
    #          mountPath: /var/lib/busybox

    #  volumes:
    #   - name: postgres-pv
    #     persistentVolumeClaim:
    #       claimName: postgres-pvc
---
###########################
# Cluster IP Service
###########################

apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  type: NodePort
  selector:
    app: django-postgre
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 31000
